(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/forms'), require('rxjs'), require('rxjs/operators')) :
    typeof define === 'function' && define.amd ? define('file-input-accessor', ['exports', '@angular/core', '@angular/forms', 'rxjs', 'rxjs/operators'], factory) :
    (global = global || self, factory(global['file-input-accessor'] = {}, global.ng.core, global.ng.forms, global.rxjs, global.rxjs.operators));
}(this, (function (exports, core, forms, rxjs, operators) { 'use strict';

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */
    /* global Reflect, Promise */

    var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };

    function __extends(d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }

    var __assign = function() {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };

    function __rest(s, e) {
        var t = {};
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
            t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }

    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }

    function __param(paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); }
    }

    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
    }

    function __awaiter(thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
            function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }

    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f) throw new TypeError("Generator is already executing.");
            while (_) try {
                if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
                if (y = 0, t) op = [op[0] & 2, t.value];
                switch (op[0]) {
                    case 0: case 1: t = op; break;
                    case 4: _.label++; return { value: op[1], done: false };
                    case 5: _.label++; y = op[1]; op = [0]; continue;
                    case 7: op = _.ops.pop(); _.trys.pop(); continue;
                    default:
                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                        if (t[2]) _.ops.pop();
                        _.trys.pop(); continue;
                }
                op = body.call(thisArg, _);
            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
        }
    }

    function __exportStar(m, exports) {
        for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
    }

    function __values(o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m) return m.call(o);
        if (o && typeof o.length === "number") return {
            next: function () {
                if (o && i >= o.length) o = void 0;
                return { value: o && o[i++], done: !o };
            }
        };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    }

    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m) return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
        }
        catch (error) { e = { error: error }; }
        finally {
            try {
                if (r && !r.done && (m = i["return"])) m.call(i);
            }
            finally { if (e) throw e.error; }
        }
        return ar;
    }

    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }

    function __spreadArrays() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    };

    function __await(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    }

    function __asyncGenerator(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
    }

    function __asyncDelegator(o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
    }

    function __asyncValues(o) {
        if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
    }

    function __makeTemplateObject(cooked, raw) {
        if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
        return cooked;
    };

    function __importStar(mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
        result.default = mod;
        return result;
    }

    function __importDefault(mod) {
        return (mod && mod.__esModule) ? mod : { default: mod };
    }

    function __classPrivateFieldGet(receiver, privateMap) {
        if (!privateMap.has(receiver)) {
            throw new TypeError("attempted to get private field on non-instance");
        }
        return privateMap.get(receiver);
    }

    function __classPrivateFieldSet(receiver, privateMap, value) {
        if (!privateMap.has(receiver)) {
            throw new TypeError("attempted to set private field on non-instance");
        }
        privateMap.set(receiver, value);
        return value;
    }

    var FileInputAccessor = /** @class */ (function () {
        function FileInputAccessor(_renderer, _elementRef) {
            this._renderer = _renderer;
            this._elementRef = _elementRef;
            this.onChange = function (_) { };
            this.onTouched = function () { };
            this.validator = this.generateAsyncValidator();
        }
        FileInputAccessor_1 = FileInputAccessor;
        Object.defineProperty(FileInputAccessor.prototype, "allowedExt", {
            get: function () {
                return this._allowedExt;
            },
            set: function (value) {
                if (typeof value === 'string') {
                    value = value + '$';
                }
                if (value instanceof Array) {
                    value = value.join('|') + '$';
                }
                this._allowedExt = value;
            },
            enumerable: true,
            configurable: true
        });
        FileInputAccessor.prototype.writeValue = function (value) {
            this._renderer.setProperty(this._elementRef.nativeElement, 'value', null);
        };
        FileInputAccessor.prototype.registerOnChange = function (fn) {
            this.onChange = this.onChangeGenerator(fn);
        };
        FileInputAccessor.prototype.registerOnTouched = function (fn) { };
        FileInputAccessor.prototype.setDisabledState = function (isDisabled) {
            this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);
        };
        FileInputAccessor.prototype.validate = function (c) {
            return this.validator(c);
        };
        /**
         * Generator method that I used to move the code for the AsyncValidator down here so it didn't
         * get in my way, way up there ^.
         */
        FileInputAccessor.prototype.generateAsyncValidator = function () {
            var _this = this;
            return function (c) {
                var e_1, _a;
                if (!c.value || !c.value.length || c.disabled)
                    return rxjs.of({});
                var errors = {};
                var loaders = [];
                var _loop_1 = function (f) {
                    if (_this.size && _this.size < f.size) {
                        f.errors.fileSize = true;
                        errors.fileSize = true;
                    }
                    if (f.isImg && (_this.maxWidth || _this.maxHeight || _this.minWidth || _this.minHeight)) {
                        loaders.push(f.imgLoadReplay
                            .pipe(operators.take(1), operators.map(function (e) {
                            var minWidthError = _this.minWidth && f.imgWidth < _this.minWidth;
                            var minHeightError = _this.minHeight && f.imgHeight < _this.minHeight;
                            var maxWidthError = _this.maxWidth && f.imgWidth > _this.maxWidth;
                            var maxHeightError = _this.maxHeight && f.imgHeight > _this.maxHeight;
                            if (minWidthError) {
                                f.errors.minWidth = true;
                                errors.minWidth = true;
                            }
                            if (minHeightError) {
                                f.errors.minHeight = true;
                                errors.minHeight = true;
                            }
                            if (maxWidthError) {
                                f.errors.maxWidth = true;
                                errors.maxWidth = true;
                            }
                            if (maxHeightError) {
                                f.errors.maxHeight = true;
                                errors.maxHeight = true;
                            }
                            /** will be @deprecated **/
                            if (minWidthError || maxWidthError) {
                                f.errors.imageWidth = true;
                                errors.imageWidth = true;
                            }
                            /** will be @deprecated **/
                            if (minHeightError || maxHeightError) {
                                f.errors.imageHeight = true;
                                errors.imageHeight = true;
                            }
                            return e;
                        })));
                    }
                    if (!_this.allowedExt && !_this.allowedTypes)
                        return "continue";
                    var extP = _this.generateRegExp(_this.allowedExt);
                    var typeP = _this.generateRegExp(_this.allowedTypes);
                    if (extP && !extP.test(f.name)) {
                        f.errors.fileExt = true;
                        errors.fileExt = true;
                    }
                    if (typeP && !typeP.test(f.type)) {
                        f.errors.fileType = true;
                        errors.fileType = true;
                    }
                };
                try {
                    for (var _b = __values(c.value), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var f = _c.value;
                        _loop_1(f);
                    }
                }
                catch (e_1_1) { e_1 = { error: e_1_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_1) throw e_1.error; }
                }
                if (loaders.length) {
                    return rxjs.forkJoin.apply(void 0, __spread(loaders)).pipe(operators.map(function () { return errors; }));
                }
                return rxjs.of(errors);
            };
        };
        /**
         * Generator method that returns an onChange handler
         */
        FileInputAccessor.prototype.onChangeGenerator = function (fn) {
            var _this = this;
            return function (files) {
                var e_2, _a;
                var fileArr = [];
                try {
                    for (var files_1 = __values(files), files_1_1 = files_1.next(); !files_1_1.done; files_1_1 = files_1.next()) {
                        var f = files_1_1.value;
                        if (_this.withMeta && FileReader) {
                            var fr = new FileReader();
                            _this.generateFileMeta(f, fr);
                        }
                        f.errors = {};
                        fileArr.push(f);
                    }
                }
                catch (e_2_1) { e_2 = { error: e_2_1 }; }
                finally {
                    try {
                        if (files_1_1 && !files_1_1.done && (_a = files_1.return)) _a.call(files_1);
                    }
                    finally { if (e_2) throw e_2.error; }
                }
                fn(fileArr);
            };
        };
        FileInputAccessor.prototype.generateRegExp = function (pattern) {
            if (!pattern)
                return null;
            if (pattern instanceof RegExp) {
                return new RegExp(pattern);
            }
            else if (typeof pattern === 'string') {
                return new RegExp(pattern, 'ig');
            }
            else if (pattern instanceof Array) {
                return new RegExp("(" + pattern.join('|') + ")", 'ig');
            }
            return null;
        };
        /**
         * The ICustomFile has a ReplaySubject property for text / image files that will emit
         * once the file has been loaded. Might get removed later since I haven't found a use for it yet.
         */
        FileInputAccessor.prototype.generateFileMeta = function (f, fr) {
            if (f.type.match(/text.*/)) {
                f.textLoadReplay = this.setText(f, fr);
            }
            else if (f.type.match(/image.*/)) {
                f.imgLoadReplay = this.setImage(f, fr);
            }
        };
        FileInputAccessor.prototype.setImage = function (f, fr) {
            f.isImg = true;
            var img = new Image();
            var imgLoadObs = rxjs.fromEventPattern((function (handler) { return img.addEventListener('load', handler); }), (function (handler) { return img.removeEventListener('load', handler); })).pipe(operators.take(1), operators.shareReplay());
            var frLoadObs = rxjs.fromEventPattern((function (handler) { return fr.addEventListener('load', handler); }), (function (handler) { return fr.removeEventListener('load', handler); })).pipe(operators.take(1), operators.shareReplay());
            var onloadReplay = new rxjs.ReplaySubject(1);
            rxjs.forkJoin(imgLoadObs, frLoadObs).pipe(operators.first()).subscribe(onloadReplay);
            imgLoadObs.pipe(operators.first()).subscribe(function () {
                f.imgHeight = img.height;
                f.imgWidth = img.width;
            });
            frLoadObs.pipe(operators.first()).subscribe(function () {
                f.imgSrc = fr.result + '';
                img.src = fr.result + '';
            });
            fr.readAsDataURL(f);
            return onloadReplay;
        };
        FileInputAccessor.prototype.setText = function (f, fr) {
            var frLoadObs = rxjs.fromEventPattern((function (handler) { return fr.addEventListener('load', handler); }), (function (handler) { return fr.removeEventListener('load', handler); })).pipe(operators.take(1), operators.shareReplay());
            var onloadReplay = new rxjs.ReplaySubject(1);
            frLoadObs.subscribe(onloadReplay);
            frLoadObs.pipe(operators.first()).subscribe(function () {
                f.textContent = fr.result + '';
            });
            fr.readAsText(f);
            return onloadReplay;
        };
        var FileInputAccessor_1;
        FileInputAccessor.ctorParameters = function () { return [
            { type: core.Renderer2 },
            { type: core.ElementRef }
        ]; };
        __decorate([
            core.Input(),
            __metadata("design:type", Object)
        ], FileInputAccessor.prototype, "allowedTypes", void 0);
        __decorate([
            core.Input(),
            __metadata("design:type", Number)
        ], FileInputAccessor.prototype, "size", void 0);
        __decorate([
            core.Input(),
            __metadata("design:type", Boolean)
        ], FileInputAccessor.prototype, "withMeta", void 0);
        __decorate([
            core.Input(),
            __metadata("design:type", Number)
        ], FileInputAccessor.prototype, "maxHeight", void 0);
        __decorate([
            core.Input(),
            __metadata("design:type", Number)
        ], FileInputAccessor.prototype, "maxWidth", void 0);
        __decorate([
            core.Input(),
            __metadata("design:type", Number)
        ], FileInputAccessor.prototype, "minHeight", void 0);
        __decorate([
            core.Input(),
            __metadata("design:type", Number)
        ], FileInputAccessor.prototype, "minWidth", void 0);
        __decorate([
            core.Input(),
            __metadata("design:type", Object),
            __metadata("design:paramtypes", [Object])
        ], FileInputAccessor.prototype, "allowedExt", null);
        __decorate([
            core.HostListener('change', ['$event.target.files']),
            __metadata("design:type", Object)
        ], FileInputAccessor.prototype, "onChange", void 0);
        __decorate([
            core.HostListener('blur'),
            __metadata("design:type", Object)
        ], FileInputAccessor.prototype, "onTouched", void 0);
        FileInputAccessor = FileInputAccessor_1 = __decorate([
            core.Directive({
                selector: 'input[type=file][formControl],input[type=file][formControlName],input[type=file][ngModel]',
                providers: [
                    {
                        provide: forms.NG_VALUE_ACCESSOR,
                        useExisting: core.forwardRef(function () { return FileInputAccessor_1; }),
                        multi: true
                    },
                    {
                        provide: forms.NG_ASYNC_VALIDATORS,
                        useExisting: core.forwardRef(function () { return FileInputAccessor_1; }),
                        multi: true
                    }
                ]
            }),
            __metadata("design:paramtypes", [core.Renderer2, core.ElementRef])
        ], FileInputAccessor);
        return FileInputAccessor;
    }());

    var FileInputAccessorModule = /** @class */ (function () {
        function FileInputAccessorModule() {
        }
        FileInputAccessorModule = __decorate([
            core.NgModule({
                declarations: [FileInputAccessor],
                imports: [
                    forms.FormsModule,
                    forms.ReactiveFormsModule
                ],
                exports: [
                    FileInputAccessor,
                    forms.FormsModule,
                    forms.ReactiveFormsModule
                ]
            })
        ], FileInputAccessorModule);
        return FileInputAccessorModule;
    }());

    exports.FileInputAccessor = FileInputAccessor;
    exports.FileInputAccessorModule = FileInputAccessorModule;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=file-input-accessor.umd.js.map
