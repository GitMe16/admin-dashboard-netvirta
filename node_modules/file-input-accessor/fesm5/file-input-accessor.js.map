{"version":3,"file":"file-input-accessor.js","sources":["ng://file-input-accessor/lib/file-input-accessor.ts","ng://file-input-accessor/lib/file-input-accessor.module.ts","ng://file-input-accessor/public_api.ts","ng://file-input-accessor/file-input-accessor.ts"],"sourcesContent":["import {Directive, ElementRef, forwardRef, HostListener, Input, Renderer2} from '@angular/core';\nimport {\n    AbstractControl,\n    AsyncValidator,\n    AsyncValidatorFn,\n    ControlValueAccessor,\n    FormControl,\n    NG_ASYNC_VALIDATORS,\n    NG_VALUE_ACCESSOR,\n    ValidationErrors\n} from '@angular/forms';\n\nimport {forkJoin, fromEventPattern, Observable, of, ReplaySubject} from 'rxjs';\nimport {first, map, shareReplay, take} from 'rxjs/operators';\nimport {ICustomFile} from './interfaces';\n\n\n@Directive({\n    selector: 'input[type=file][formControl],input[type=file][formControlName],input[type=file][ngModel]',\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => FileInputAccessor),\n            multi: true\n        },\n        {\n            provide: NG_ASYNC_VALIDATORS,\n            useExisting: forwardRef(() => FileInputAccessor),\n            multi: true\n        }\n    ]\n})\nexport class FileInputAccessor implements ControlValueAccessor, AsyncValidator {\n    @Input() allowedTypes: RegExp | string | string[];\n\n    @Input() size: number;\n\n    @Input() withMeta: boolean;\n\n    @Input() maxHeight: number;\n\n    @Input() maxWidth: number;\n\n    @Input() minHeight: number;\n\n    @Input() minWidth: number;\n\n    @Input()\n    set allowedExt(value: RegExp | string | string[]) {\n        if (typeof value === 'string') {\n            value = value + '$';\n        }\n        if (value instanceof Array) {\n            value = value.join('|') + '$';\n        }\n        this._allowedExt = value;\n    }\n\n    get allowedExt(): RegExp | string | string[] {\n        return this._allowedExt;\n    }\n\n    validator: AsyncValidatorFn;\n\n    private _allowedExt: RegExp | string | string[];\n\n    @HostListener('change', ['$event.target.files']) onChange = (_: any) => {};\n    @HostListener('blur') onTouched = () => {};\n\n    constructor(private _renderer: Renderer2, private _elementRef: ElementRef) {\n        this.validator = this.generateAsyncValidator();\n    }\n\n    writeValue(value: any) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'value', null);\n    }\n\n    registerOnChange(fn: (_: any) => {}): void {\n        this.onChange = this.onChangeGenerator(fn);\n    }\n\n    registerOnTouched(fn: () => {}): void {}\n\n    setDisabledState(isDisabled: boolean): void {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    }\n\n    validate(c: AbstractControl): Observable<ValidationErrors | null> | Promise<ValidationErrors | null> {\n        return this.validator(c);\n    }\n\n    /**\n     * Generator method that I used to move the code for the AsyncValidator down here so it didn't\n     * get in my way, way up there ^.\n     */\n    private generateAsyncValidator(): AsyncValidatorFn {\n        return (c: FormControl): Observable<ValidationErrors> => {\n            if (!c.value || !c.value.length || c.disabled) return of({});\n\n            const errors: ValidationErrors = {};\n            const loaders: ReplaySubject<ProgressEvent>[] = [];\n\n            for (const f of c.value) {\n                if (this.size && this.size < f.size) {\n                    f.errors.fileSize = true;\n                    errors.fileSize = true;\n                }\n\n                if (f.isImg && (this.maxWidth || this.maxHeight || this.minWidth || this.minHeight)) {\n                    loaders.push(\n                        f.imgLoadReplay\n                            .pipe(\n                                take(1),\n                                map((e: ProgressEvent) => {\n                                    const minWidthError = this.minWidth && f.imgWidth < this.minWidth;\n                                    const minHeightError = this.minHeight && f.imgHeight < this.minHeight;\n                                    const maxWidthError = this.maxWidth && f.imgWidth > this.maxWidth;\n                                    const maxHeightError = this.maxHeight && f.imgHeight > this.maxHeight;\n\n                                    if (minWidthError) {\n                                        f.errors.minWidth = true;\n                                        errors.minWidth = true;\n                                    }\n\n                                    if (minHeightError) {\n                                        f.errors.minHeight = true;\n                                        errors.minHeight = true;\n                                    }\n\n                                    if (maxWidthError) {\n                                        f.errors.maxWidth = true;\n                                        errors.maxWidth = true;\n                                    }\n\n                                    if (maxHeightError) {\n                                        f.errors.maxHeight = true;\n                                        errors.maxHeight = true;\n                                    }\n\n                                    /** will be @deprecated **/\n                                    if (minWidthError || maxWidthError) {\n                                        f.errors.imageWidth = true;\n                                        errors.imageWidth = true;\n                                    }\n\n                                    /** will be @deprecated **/\n                                    if (minHeightError || maxHeightError) {\n                                        f.errors.imageHeight = true;\n                                        errors.imageHeight = true;\n                                    }\n\n                                    return e;\n                                }))\n                    );\n                }\n\n                if (!this.allowedExt && !this.allowedTypes) continue;\n\n                const extP = this.generateRegExp(this.allowedExt);\n                const typeP = this.generateRegExp(this.allowedTypes);\n\n                if (extP && !extP.test(f.name)) {\n                    f.errors.fileExt = true;\n                    errors.fileExt = true;\n                }\n\n                if (typeP && !typeP.test(f.type)) {\n                    f.errors.fileType = true;\n                    errors.fileType = true;\n                }\n            }\n            if (loaders.length) {\n                return forkJoin(...loaders).pipe(map(() => errors));\n            }\n            return of(errors);\n        };\n    }\n\n    /**\n     * Generator method that returns an onChange handler\n     */\n    private onChangeGenerator(fn: (_: any) => {}): (_: ICustomFile[]) => void {\n        return (files: ICustomFile[]) => {\n            const fileArr: File[] = [];\n\n            for (const f of files) {\n                if (this.withMeta && FileReader) {\n                    const fr = new FileReader();\n                    this.generateFileMeta(f, fr);\n                }\n                f.errors = {};\n                fileArr.push(f);\n            }\n            fn(fileArr);\n        };\n    }\n\n    private generateRegExp(pattern: RegExp | string | string[]): RegExp | null {\n        if (!pattern) return null;\n\n        if (pattern instanceof RegExp) {\n            return new RegExp(pattern);\n        } else if (typeof pattern === 'string') {\n            return new RegExp(pattern, 'ig');\n        } else if (pattern instanceof Array) {\n            return new RegExp(`(${pattern.join('|')})`, 'ig');\n        }\n        return null;\n    }\n\n    /**\n     * The ICustomFile has a ReplaySubject property for text / image files that will emit\n     * once the file has been loaded. Might get removed later since I haven't found a use for it yet.\n     */\n    private generateFileMeta(f: ICustomFile, fr: FileReader) {\n        if (f.type.match(/text.*/)) {\n            f.textLoadReplay = this.setText(f, fr);\n        } else if (f.type.match(/image.*/)) {\n            f.imgLoadReplay = this.setImage(f, fr);\n        }\n    }\n\n    private setImage(f: ICustomFile, fr: FileReader): ReplaySubject<[Event, ProgressEvent]> {\n        f.isImg = true;\n\n        const img = new Image();\n\n        const imgLoadObs = fromEventPattern<Event>(\n            ((handler: any) => img.addEventListener('load', handler)),\n            ((handler: any) => img.removeEventListener('load', handler))\n        ).pipe(\n            take(1),\n            shareReplay()\n        );\n\n        const frLoadObs = fromEventPattern<ProgressEvent>(\n            ((handler: any) => fr.addEventListener('load', handler)),\n            ((handler: any) => fr.removeEventListener('load', handler))\n        ).pipe(\n            take(1),\n            shareReplay()\n        );\n\n        const onloadReplay = new ReplaySubject<[Event, ProgressEvent]>(1);\n        forkJoin(imgLoadObs, frLoadObs).pipe(first()).subscribe(onloadReplay);\n\n        imgLoadObs.pipe(first()).subscribe(() => {\n            f.imgHeight = img.height;\n            f.imgWidth = img.width;\n        });\n\n        frLoadObs.pipe(first()).subscribe(() => {\n            f.imgSrc = fr.result + '';\n            img.src = fr.result + '';\n        });\n\n        fr.readAsDataURL(f);\n\n        return onloadReplay;\n    }\n\n    private setText(f: ICustomFile, fr: FileReader): ReplaySubject<ProgressEvent> {\n        const frLoadObs = fromEventPattern<ProgressEvent>(\n            ((handler: any) => fr.addEventListener('load', handler)),\n            ((handler: any ) => fr.removeEventListener('load', handler))\n        ).pipe(\n            take(1),\n            shareReplay()\n        );\n\n        const onloadReplay = new ReplaySubject<ProgressEvent>(1);\n        frLoadObs.subscribe(onloadReplay);\n\n        frLoadObs.pipe(first()).subscribe(() => {\n            f.textContent = fr.result + '';\n        });\n\n        fr.readAsText(f);\n\n        return onloadReplay;\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {FileInputAccessor} from './file-input-accessor';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\n\n@NgModule({\n    declarations: [FileInputAccessor],\n    imports: [\n        FormsModule,\n        ReactiveFormsModule\n    ],\n    exports: [\n        FileInputAccessor,\n        FormsModule,\n        ReactiveFormsModule\n    ]\n})\nexport class FileInputAccessorModule {\n}\n","/*\n * Public API Surface of file-input-accessor\n */\n\nexport * from './lib/file-input-accessor';\nexport * from './lib/file-input-accessor.module';\nexport * from './lib/interfaces';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}